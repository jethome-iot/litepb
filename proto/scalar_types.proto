syntax = "proto3";

package test.scalar;

// Test message with all scalar types
message ScalarTypes {
    // Integer types
    int32 field_int32 = 1;
    int64 field_int64 = 2;
    uint32 field_uint32 = 3;
    uint64 field_uint64 = 4;
    sint32 field_sint32 = 5;
    sint64 field_sint64 = 6;
    
    // Fixed-width types
    fixed32 field_fixed32 = 7;
    fixed64 field_fixed64 = 8;
    sfixed32 field_sfixed32 = 9;
    sfixed64 field_sfixed64 = 10;
    
    // Floating-point types
    float field_float = 11;
    double field_double = 12;
    
    // Boolean type
    bool field_bool = 13;
    
    // String and bytes
    string field_string = 14;
    bytes field_bytes = 15;
}

// Test with default values (proto3 doesn't support explicit defaults)
message DefaultValues {
    int32 int_field = 1;     // default: 0
    string string_field = 2;  // default: ""
    bool bool_field = 3;      // default: false
    double double_field = 4;  // default: 0.0
}

// Test with all types as repeated
message RepeatedScalarTypes {
    repeated int32 repeated_int32 = 1;
    repeated int64 repeated_int64 = 2;
    repeated uint32 repeated_uint32 = 3;
    repeated uint64 repeated_uint64 = 4;
    repeated sint32 repeated_sint32 = 5;
    repeated sint64 repeated_sint64 = 6;
    repeated fixed32 repeated_fixed32 = 7;
    repeated fixed64 repeated_fixed64 = 8;
    repeated sfixed32 repeated_sfixed32 = 9;
    repeated sfixed64 repeated_sfixed64 = 10;
    repeated float repeated_float = 11;
    repeated double repeated_double = 12;
    repeated bool repeated_bool = 13;
    repeated string repeated_string = 14;
    repeated bytes repeated_bytes = 15;
}

// Test packed encoding (proto3 uses packed by default for scalar repeated fields)
message PackedTypes {
    repeated int32 packed_int32 = 1 [packed = true];
    repeated double packed_double = 2 [packed = true];
    repeated bool packed_bool = 3 [packed = true];
    repeated fixed32 packed_fixed32 = 4 [packed = true];
}