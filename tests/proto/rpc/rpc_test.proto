syntax = "proto3";

package test.rpc;

import "litepb/rpc_options.proto";

message EchoRequest {
    int32 value = 1;
    string message = 2;
}

message EchoResponse {
    int32 value = 1;
    string message = 2;
}

message NotificationRequest {
    string event = 1;
    string data = 2;
}

message NotificationResponse {
    bool success = 1;
}

message StatusRequest {
    int32 status_type = 1;
}

message StatusResponse {
    string status = 1;
}

service EchoService {
    option (litepb.rpc.service_id) = 1;
    
    // Test with custom timeout
    rpc Echo(EchoRequest) returns (EchoResponse) {
        option (litepb.rpc.default_timeout_ms) = 3000;
        option (litepb.rpc.method_id) = 1;
    }
    
    // Test with shorter timeout
    rpc SendNotification(NotificationRequest) returns (NotificationResponse) {
        option (litepb.rpc.default_timeout_ms) = 2000;
        option (litepb.rpc.method_id) = 2;
    }
    
    // Test with default timeout
    rpc GetStatus(StatusRequest) returns (StatusResponse) {
        option (litepb.rpc.method_id) = 3;
    }
}
