syntax = "proto3";

package alltypes;

// Enum type demonstration
enum Status {
    UNKNOWN = 0;
    ACTIVE = 1;
    INACTIVE = 2;
    PENDING = 3;
}

// Nested message for demonstrating message types
message Address {
    string street = 1;
    string city = 2;
    int32 zip_code = 3;
}

// Comprehensive message showcasing ALL Protocol Buffer types
message TypeShowcase {
    // Scalar types - Variable-length encoding
    int32 field_int32 = 1;
    int64 field_int64 = 2;
    uint32 field_uint32 = 3;
    uint64 field_uint64 = 4;
    sint32 field_sint32 = 5;    // Uses zigzag encoding for negative numbers
    sint64 field_sint64 = 6;    // Uses zigzag encoding for negative numbers
    bool field_bool = 7;
    string field_string = 8;
    bytes field_bytes = 9;
    
    // Fixed-width types - Always use exactly 4 or 8 bytes
    fixed32 field_fixed32 = 10;
    fixed64 field_fixed64 = 11;
    sfixed32 field_sfixed32 = 12;  // Signed fixed 32-bit
    sfixed64 field_sfixed64 = 13;  // Signed fixed 64-bit
    
    // Floating point types
    float field_float = 14;
    double field_double = 15;
    
    // Enum type
    Status field_enum = 16;
    
    // Nested message
    Address field_address = 17;
    
    // Repeated fields (packed by default in proto3)
    repeated int32 repeated_int32 = 18;
    repeated string repeated_string = 19;
    repeated Address repeated_addresses = 20;
    
    // Unpacked repeated field (explicitly set)
    repeated int32 repeated_unpacked = 21 [packed = false];
    
    // Map fields
    map<string, int32> map_string_int = 22;
    map<string, Address> map_string_message = 23;
    
    // Oneof (union type - only one field can be set at a time)
    oneof test_oneof {
        string oneof_string = 24;
        int32 oneof_int32 = 25;
        Address oneof_address = 26;
    }
}
